;-- MSX2 KANJI EDITOR --
;
;  "FIELD WORK" ver.0.81
;
; use SCREEN2 / KANJI ROM
;
;  1996,2023 (C) UNISKIE

;プログラムサイズ 上限 $DC00
;
; $E47D : A1WSX 2DRIVE
; $DE67 : A1WSX 2DRIVE
; $E48D : CF-3300 1 DRIVE(ctrl起動)
; $DE77 : CF-3300 2 DRIVE

; 参考
; $DAFE : A1WSX 2DRIVE + _KANJI(+$369)
;
; MSX-JE : 4 bytes + etc.?

; _SAVE("FW
		FNAME		"FW.BIN"		;*BINHEAD*
;--> BIN FILE HEADER -->
		DB		0FEH		;*BINHEAD*
		DW		ORGADR		;*BINHEAD*
		DW		ENDFL		;*BINHEAD*
		DW		ORGADR		;*BINHEAD*
;<-- BIN FILE HEADER <--


PROHEAD:	EQU		0B000H

ORGADR:	EQU		PROHEAD
		ORG		ORGADR

;=== BIOS ===
; BIOS CALL
ENASLT:	EQU		0024H
CHGSCR:	EQU		005FH		;(CHGMOD)
CHSNS:	EQU		009CH
INPUT:	EQU		009FH
SNSMAT:	EQU		0141H
GETPNT:	EQU		0F3FAH		;CHGET ADDRESS
KEYDAT:	EQU		0FBE5H
BUF:	EQU		0F55EH
FNKSTR:	EQU		0F87FH		;FUNCTION KEY STRINGS
ENSTOP:	EQU		0FBB0H		;WARM STOP FLAG
RAMAD2:	EQU		0F343H		;PAGE2 RAM SLOT
EXTBIO:	EQU		0FFCAH		;EXTEND-BIOS HOOK
HOKVLD:	EQU		0FB20H		;BIT0=1 :EXTEND-BIOS EXISTS

; BASIC:PLAY MML WORK
MCLTAB:	EQU		0F956H		;2+1+24+4=31bytes
VOICAQ:	EQU		0F975H		;128bytes
VOICBQ:	EQU		0F9F5H		;128bytes
VOICCQ:	EQU		0FA75H		;128bytes

; STACK POINTER
STACKA:	EQU		VOICCQ+128-2		;BASIC PLAY BUFF 128*3

;=== FW CONSTANTS ===
; CONSTANTS
BACKGC:	EQU		1			;BOADER COLOR
C_BKOF:	EQU		001H		;BACK GROUND
C_BKON:	EQU		01AH		;B.G. CURSOL
C_MJOF:	EQU		0F1H		;NORMAL COLOR
C_MJON:	EQU		013H		;NORMAL CURSOL
C_KJOF:	EQU		051H		;KANJI COLOR
C_KJON:	EQU		0B1H		;KANJI SELECTED
C_FSOF:	EQU		071H		;FILES
C_EROR:	EQU		091H		;ERROR
C_MENU:	EQU		071H		;MENU U
C_MEND:	EQU		0E1H		;MENU D
C_STAT:	EQU		030H		;STATUS WINDOW
C_STA2:	EQU		030H		;STATUS WINDOW2
C_INF1:	EQU		0F0H		;STATUS INFO
C_INF2:	EQU		070H		;STATUS INFO
C_INF3:	EQU		010H		;STATUS INFO

INI:	LD		(RET_SP),SP
		LD		IX,STACKA
		LD		SP,IX
		XOR		A
		LD		(0FBB0H),A
		CALL	MEMSAVE

		LD		A,2
		CALL	CHGSCR
		CALL	SC2INI
		CALL	TITLE

		CALL	LOADFNT
		CALL	SC2SET

		CALL	TXCLEAR
		LD		A,C_MJOF
		CALL	KANJI_C

		CALL	FNKSAVE
		CALL	JEMODE_
		CALL	JESET
		CALL	KEYCLR

L_TEST:	CALL	PUT_INF
		CALL	CUR_ON
		LD		A,(JE_MODE)
		OR		A
		JR		Z,LTEST_
JE_WAIT:
		LD		A,(KEYDAT+6)
		AND		4		;[CAPS]
		JP		Z,JE_IN
		CALL	CHSNS
		JP		Z,JE_WAIT
JE_IN:	LD		A,6
		CALL	JECALL
		RRCA
		PUSH	AF
		CALL	C,STBSET
		POP		AF
		RRCA
		CALL	C,INKEYK
		RRCA
		JP		C,JE_GET
		RLCA
		RLCA
		JP		C,JE_IN
		JP		JE_WAIT
JE_GET:	CALL	CHSNS
		JP		Z,L_TEST
		LD		HL,(GETPNT)
		LD		A,(HL)
		CP		127
		JR		Z,LTEST_
		CP		32
		JP		NC,L_TEST
LTEST_:	CALL	INPUT
		EX		AF,AF'
		CALL	CUR_OF
		EX		AF,AF'
		LD		HL,L_TEST
		PUSH	HL
		LD		HL,JPTABLE
		CALL	KANJI_F
		JP		NC,INKEYS
L_JUMP:	LD		B,(HL)
		INC		HL
		INC		HL
		LD		E,(HL)
		INC		HL
		LD		D,(HL)
		INC		HL
		LD		(M_JUMP+1),DE
		CP		B
M_JUMP:	JP		Z,0000		;dummy
		INC		B
		JP		NZ,L_JUMP
E_TEST:	RET

ESCRET:	LD		A,(KEYDAT+6)
		AND		1		; [SHIFT]
		JP		Z,	RETURN
		JP		MMENU	;TX_FILE

RETURN:	CALL	RESWIN
		CALL	JERES
		XOR		A
		CALL	MEMLOAD
		LD		HL,(RET_SP)
		LD		SP,HL
		RET

;-------------------
RET_SP:		DW		0
JE_MODE:	DB		0	;1=MSX-JE ON
;-------------------

;-------------------
JPTABLE:
		DW		13 , INP_RET	; CTRL+M = RETURN
		DW		11 , TX_HEAD	; CTRL+K = HOME
		DW		12 , TX_TAIL	; CTRL+L = SHIFT+HOME(CLS)
		DW		28 , CR_RG 		; CTRL+\ = RIGHT
		DW		29 , CR_LT 		; CTRL+] = LEFT
		DW		30 , CR_UP 		; CTRL+^ = UP
		DW		31 , CR_DW 		; CTRL+_ = DOWN
		DW		18 , MODCHG 	; CTRL+R = INS
		DW		127, MJ_DEL 	; DEL
		DW		8  , MJ_BKS 	; CTRL+H = BS
		DW		5  , MJ_LID 	; CTRL+E
		DW		24 , JECHG 		; CTRL+X = SELECT
		DW		7  , TESLIN		; CTRL+G
		DW		27 , ESCRET 	; CTRL+[ = ESC
		DW		255, E_TEST 	; ---- end ---
;-------------------

;--- SUB RUTINES ---
INKEYS:	LD		HL,BUF
		LD		(HL),1
		INC		HL
		LD		(HL),A
		DEC		HL
		JP		MJ_WRIT
INKEYK:	PUSH	AF
		CALL	CUR_OF
		LD		A,7
		CALL	JECALL
		LD		DE,BUF+1
		LD		B,-1
L_INKK:	LD		A,(HL)
		LD		(DE),A
		INC		B
		INC		DE
		INC		HL
		OR		A
		JP		NZ,L_INKK
		LD		A,B
		OR		A
		JR		Z,E_INKK
		LD		(BUF),A
		LD		HL,BUF
		CALL	MJ_WRIT
E_INKK:	CALL	CUR_ON
		POP		AF
		RET

MODCHG:	LD		A,(TD_MODE)
		INC		A
		AND		1
		LD		(TD_MODE),A
		RET

JECHG:	LD		A,04
		CALL	JECALL
		LD		A,(JE_MODE)
		INC		A
		AND		1
		LD		(JE_MODE),A
		PUSH	AF
		CALL	JEMODE_
		POP		AF
		RET		Z
		POP		HL
		CALL	CUR_ON
		JP		JE_IN

JEMODE_:
		LD		A,(JE_MODE)
		OR		A
		CALL	Z,FNKLOAD
		OR		A
		LD		HL,M_JEOFF
		JP		Z,STBSET
		LD		HL,M_JECLR
		JP		STBSET
M_JEOFF:
		DB		12,26,C_STAT
		DB		'     EDIT:'	;*DM*
FILENAM:
		DB		'________.___'	;*DM*
		DB		'      '	;*DM*
		DB		24,0,0
M_JECLR:
		DB		12,26,C_KJOF,0

INP_RET:
		LD		A,(TD_MODE)
		OR		A
		JP		NZ,INP_RE0
		CALL	GETYNOW
		LD		DE,(TD_YMAX)
		OR		A
		SBC		HL,DE
		JP		NZ,INP_RE1
		CALL	GETYLIN
		LD		(CUR_AXS),A
INP_RE0:
		LD		HL,RET_IN
		CALL	MJ_WRIT
INP_RE1:
		XOR		A
		LD		(CUR_AXS),A
		JP		CR__DW
RET_IN:	DB		2,13,10

CR_TAIL:
		CALL	GETYLIN
		LD		(CUR_AXS),A
		RET
CR_HEAD:
		XOR		A
		LD		(CUR_AXS),A
		RET
CR_RG:	CALL	K_CT_SH
		JP		Z,CR_TAIL
		LD		A,(CUR_AXS)
		INC		A
		AND		31
		LD		(CUR_AXS),A
		JR		Z,CR_DW
		RET
CR_LT:	CALL	K_CT_SH
		JP		Z,CR_HEAD
		LD		A,(CUR_AXS)
		DEC		A
		AND		31
		LD		(CUR_AXS),A
		CP		31
		JR		Z,CR_UP
		RET
CR_UP:	CALL	K_CT_SH
		JP		Z,TX_SKPU
CR__UP:	LD		A,(CUR_AXS+1)
		DEC		A
		DEC		A
		LD		(CUR_AXS+1),A
		CP		UD_SCR+1
		RET		C
		XOR		A
		LD		(CUR_AXS+1),A
		JP		TX_SCRU
CR_DW:	CALL	K_CT_SH
		JP		Z,TX_SKPD
CR__DW:	CALL	GETYNOW
		LD		DE,(TD_YMAX)
		OR		A
		SBC		HL,DE
		RET		Z
		LD		A,(CUR_AXS+1)
		INC		A
		INC		A
		CP		UD_SCR+1
		LD		(CUR_AXS+1),A
		RET		C
		LD		A,UD_SCR
		LD		(CUR_AXS+1),A
		JP		TX_SCRD
TESLIN:	CALL	INPLINE
		RET		Z
		;LD		DE,(TD_YMAX)
		JP		TX_LINE

; CHECK CTRL
K_CT_SH:
		LD		A,(KEYDAT+6)
;		AND		3	;	[CTRL]+[SHIFT]
		AND		2	;	[CTRL]
		RET

;-SUB RUTINE-

;- WRITE CURSOL
;	D:COLOR
;   E:LENGTH 8/16
CUR_WR:	;	HL:VRAM ADDRESS
		LD		HL,(CUR_AXS)
		LD		A,L
		RLCA
		RLCA
		RLCA
		LD		L,A
		LD		A,(SCRL_L)
		ADD		A,H
		AND		31
		LD		H,A
		LD		A,(TD_MODE)
		OR		A
		JP		NZ,FONT_CU
		JP		FONT_C
		
;- CURSOL DISPLAY ON
CUR_ON:	CALL	GETYLIN	;DE:ADDRESS, A:X MAX
		PUSH	DE			;<---ADDRESS
		; LINE OVER?
		LD		E,A
		CALL	CURTEST
		LD		A,E
		POP		HL			;<---ADDRESS
		LD		DE,(CUR_AXS)
		SBC		A,E
		LD		B,C_BKON
		LD		D,C_BKOF
		LD		E,8
		JR		C,CUR_SV
;<---
		; CONTROL CHR CHECK
		LD		DE,(CUR_AXS)
		LD		D,0
		ADD		HL,DE
		LD		A,(HL)
		CP		' '
		LD		B,C_MJON
		LD		D,C_BKOF
		LD		E,8
		JR		C,CUR_SV
;--->
		; NORMAL CHR
		LD		DE,(CUR_AXS)
		CALL	CURTEST
		LD		B,C_MJON
		LD		D,C_MJOF
		LD		E,8
		JP		NC,CUR_SV
		LD		E,16
CUR_SV:	LD		(CUR_OF+1),DE
		LD		D,B
		JP		CUR_WR
; HIDE CURSOL
CUR_OF:	LD		DE,0		;dummy
		JP		CUR_WR

;--- CURSOL-SIZE TEST ---
; IN | E:AXIS-X
; OUT| Cy: 1:ｾﾞﾝｶｸ / 0:ﾊﾝｶｸ
;    | Zf: 0:ｱﾀﾏﾀﾞｼ ﾌﾖｳ / 1:ｶｰｿﾙ -1 ｽﾍﾞｼ
;    | A : 1:ｱﾀﾏﾀﾞｼ ﾌﾖｳ / 0:ｶｰｿﾙ -1 ｽﾍﾞｼ
; USE| AF,BC,ALL'

CURTEST:
		PUSH	DE
		EXX
		CALL	GETYLIN		;DE:ADDRESS, A:X MAX
		EX		DE,HL
		POP		DE
		INC		E
		LD		C,0
L_CTES:	LD		A,(HL)
		LD		B,1
		CP		TAB
		JP		Z,J_CTES
		CALL	KANJI_F
		JR		NC,J_CTES
		DEC		B
		INC		C
		INC		HL
J_CTES:	INC		C
		INC		HL
		LD		A,E
		CP		C
		JP		Z,CTES2
		JP		NC,L_CTES
		EXX
		LD		A,1	;NZ
		RET
CTES2:	LD		A,B
		EXX
		OR		A	;Z OR NZ
		RET

;--- MSX-JE ---
JESET:	LD		A,(HOKVLD)
		AND		1		; 0=NO EXT-BIOS
		JR		Z,JENOT
		LD		A,(EXTBIO)
		OR		A		; 0=NO EXT-BIOS
		JR		Z,JENOT

		LD		DE,1000H		;D=10H:MSX-JE
		LD		HL,BUF
		LD		BC,(RAMAD2)		;RAM SLOT
		CALL	EXTBIO			;EXT-BIOS HOOK
		LD		DE,BUF
		OR		A
		SBC		HL,DE
		JR		NZ,JESET_
JENOT:	LD		A,0C9H		;RET
		LD		(JECHG),A		; DISABLE MSX-JE CALL
		LD		(JECALL_),A		; DISABLE MSX-JE CALL
		CALL	BEEP
		RET
JESET_:	ADD		HL,DE
LJSET:	DEC		HL
		DEC		HL
		DEC		HL
		DEC		HL
		LD		A,(HL)
		AND		3
		JP		Z,JSETW
		OR		A
		SBC		HL,DE
		JR		Z,JENOT
		ADD		HL,DE
		JP		JESET_
JSETW:	INC		HL
		LD		DE,JEADR
		LD		BC,3
		LDIR

		LD		A,1
		CALL	JECALL_
		EX		DE,HL
		LD		A,2
		JP		JECALL

;-- CALL JE --
JECALL:	LD		HL,PRO_END
JECALL_:
		RST		30H
JEADR:	DB		0
		DW		0
		EI
		RET

;-- SLOT GUIDE --
RAMP1:	LD		A,(0FCC1H)
		LD		H,40H
		CALL	ENASLT
		EI
		RET

;-- JE CLOSE --
JERES:
		;ｷｮｳｾｲ ｼｭｳﾘｮｳ ﾃﾞﾊ ﾌｧﾝｸｼｮﾝｷｰ ｶﾞ ﾌｯｷｼﾅｲ
		LD		A,(JE_MODE)
		OR		A
		CALL	NZ,FNKLOAD

		LD		A,3
		JP		JECALL

;--- FUNCTION KEY ---
FNKSAVE:
		LD		HL,FNKSTR
		LD		DE,BUF+258-80
		LD		BC,80
		LDIR
		RET
FNKLOAD:
		LD		HL,BUF+258-80
		LD		DE,FNKSTR
		LD		BC,80
		LDIR
		RET

;---
FCBFNT:	DB		0
		DB		'SPRITE7 SC5'	;*DM*
		DS		37-12

LOADFNT:
		LD		DE,TA_HEAD
		CALL	F_DMA
		LD		DE,FCBFNT
		CALL	F_OPEN
		LD		A,7
		LD		(FCBFNT+33),A
		LD		HL,800H
		LD		DE,FCBFNT
		CALL	F_READ
		RET

TITLE:	LD		A,1
		LD		(SPCFLG),A
		LD		HL,202H
		LD		DE,M_TITLE
		CALL	PRINT
		XOR		A
		LD		(SPCFLG),A
		RET
M_TITLE:	;	'   '   '   '   '   '   '   '   ''
		DB		'     MSX2 KANJI TEXT EDITOR'	;*DM*
		DB		CR,LF	;*DM*
		DB		'      ＦIELD ＷORK ver 0.83'	;*DM*
		DB		CR,LF	;*DM*
		DB		CR,LF	;*DM*
		DB		'      [ESC] メニュー表示'	;*DM*
		DB		CR,LF	;*DM*
		DB		'   [SELECT] 全角/半角切り替え'	;*DM*
		DB		CR,LF	;*DM*
		DB		'   [SHIFT+ESC] エディタを終了'	;*DM*
		DB		CR,LF	;*DM*
		DB		CR,LF	;*DM*
		DB		'    (C) 1996,2023  UNKO SOFT'	;*DM*
		DB		0

MMENU:	JP TX_FILE

		INCLUDE		"FW-SUBR.ASM"		;*FILE*
		INCLUDE		"FW-FUNC.ASM"		;*FILE*
		INCLUDE		"FW-KEYS.ASM"		;*FILE*
		INCLUDE		"FW-FILE.ASM"		;*FILE*
		INCLUDE		"DISK-IO2.ASM"		;*FILE*
		INCLUDE		"FW-KJ.ASM"		;*FILE*
		INCLUDE		"FW-SC.ASM"		;*FILE*
ENDFL:
