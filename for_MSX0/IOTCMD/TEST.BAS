10 CLEAR 400,&HD000:DEFINT A-Z
20 DIM AD(9)
30 BLOAD"IOTCMD.BIN"
40 AD=&HD000:FOR I=0 TO 9:AD(I)=AD+I*3:NEXT I
50 DEFUSR0=AD(0) 'set_flag
60 DEFUSR1=AD(1) 'iot_node
70 DEFUSR2=AD(2) 'iot_put_i
80 DEFUSR3=AD(3) 'iot_put_s
90 DEFUSR4=AD(4) 'iot_get_i
100 DEFUSR5=AD(5) 'iot_get_s
110 DEFUSR6=AD(6) 'iot_find_i
120 DEFUSR7=AD(7) 'iot_find_s
130 DEFUSR8=AD(8) 'iot_read_i
140 DEFUSR9=AD(9) 'iot_read_s
150 '
160 SCREEN 0:WIDTH40:KEYOFF
170 '
180 _TURBO ON(AD())
190 TR=1E-40=0:A=USR(TR):IF TR THEN PRINT"TURBO"
191 '
200 '対象ノードを指定
210 ND$="device/i2c_i":A=USR1(VARPTR(ND$)) 'IOT_NODE
220 PRINT "SET NODE:";ND$;" - ";
230 IF A THEN PRINT"ERROR:";A ELSE PRINT"OK"
240 '
250 'サブノードの数を取得
260 CN=USR6(0) ' IOT_FIND_I
270 PRINT "FIND_I=";CN
280 BF$=STRING$(32, 32)
290 '
300 '1つ目のサブノード取得
310 D$=BF$:A=USR7(VARPTR(D$)):D$=LEFT$(D$,A)
320 PRINT"FIND_S(";A;") ";D$
330 IF D$="68" THEN MU=1'ジャイロあり
340 '
350 '2つ目以降のサブノード取得(あれば)
360 FOR I=1 TO CN-1
370 D$=BF$:A=USR9(VARPTR(D$)):D$=LEFT$(D$,A)
380  PRINT"READ_S(";A;") ";D$
390  IF D$="68" THEN MU=1'ジャイロあり
400 NEXT I
410 '
420 'ジャイロ発見？
430 PRINT"68:MPU6886(ACCEL) ";
440 IF MU=0 THEN PRINT"not ";
450 PRINT"found"
460 IF MU=0 THEN END
461 ND$="device/i2c_i/68"'MPU6886 I2C
470 '
530 AX$="device/accel/x":A=USR1(VARPTR(AX$)) 'IOT_NODE
540 PRINT "SET NODE:";AX$;" - ";
550 IF A THEN PRINT"ERROR:";A ELSE PRINT"OK"
570 '
580 AY$="device/accel/y":A=USR1(VARPTR(AY$)) 'IOT_NODE
590 PRINT "SET NODE:";AY$;" - ";
600 IF A THEN PRINT"ERROR:";A ELSE PRINT"OK"
620 '
630 AZ$="device/accel/z":A=USR1(VARPTR(AZ$)) 'IOT_NODE
640 PRINT "SET NODE:";AZ$;" - ";
650 IF A THEN PRINT"ERROR:";A ELSE PRINT"OK"
670 '
680 CX=POS(0):CY=CSRLIN'現在の位置
690 LOCATE CX,CY
691 PRINT"ACCEL     X= 0    Y= 0    Z= 0    "
692 PRINT"ACCEL reg X= 0    Y= 0    Z= 0    "
693 PRINT"GYRO  reg X= 0    Y= 0    Z= 0    "
700 '
710 'device/accel 表示
720 A=USR1(VARPTR(AX$))'IOT_NODE device/accel/x
721 X=USR4(0)'IOT_GET_I
730 A=USR1(VARPTR(AY$))'IOT_NODE device/accel/y
731 Y=USR4(0)'IOT_GET_I
740 A=USR1(VARPTR(AZ$))'IOT_NODE device/accel/z
741 Z=USR4(0)'IOT_GET_I
750 LOCATE CX+12,CY+0:PRINT LEFT$(STR$(X)+"    ",6);
751 LOCATE CX+20,CY+0:PRINT LEFT$(STR$(Y)+"    ",6);
752 LOCATE CX+28,CY+0:PRINT LEFT$(STR$(Z)+"    ",6);
790 '
791 R=59' ACCEL reg.59-64
792 ' ACCEL_XOUT_H, ACCEL_XOUT_L
793 ' ACCEL_YOUT_H, ACCEL_YOUT_L
794 ' ACCEL_ZOUT_H, ACCEL_ZOUT_L
800 A=USR1(VARPTR(ND$))'IOT_NODE device/i2c_i/68
801 A=USR(TR+2)'2 = PRESUDO BURST READ MODE
810 D$=CHR$(R+0):A=USR3(VARPTR(D$))'IOT_PUT_S SET REGISTER ADDRESS
811 D$=SPACE$(6):A=USR5(VARPTR(D$))'IOT_GET_S PRESUDO BURST READ * 6
812 D=VARPTR(D$)+1
820 A=VARPTR(X):POKE A+0,PEEK(D+1):POKE A+1,PEEK(D+0)
821 A=VARPTR(Y):POKE A+0,PEEK(D+3):POKE A+1,PEEK(D+2)
822 A=VARPTR(Z):POKE A+0,PEEK(D+5):POKE A+1,PEEK(D+4)
830 LOCATE CX+12,CY+1:PRINT LEFT$(STR$(X)+"    ",6);
831 LOCATE CX+20,CY+1:PRINT LEFT$(STR$(Y)+"    ",6);
832 LOCATE CX+28,CY+1:PRINT LEFT$(STR$(Z)+"    ",6);
840 '
841 R=67' GYRO reg.67-72
842 ' GYRO_XOUT_H, GYRO_XOUT_L
843 ' GYRO_YOUT_H, GYRO_YOUT_L
844 ' GYRO_ZOUT_H, GYRO_ZOUT_L
850 A=USR1(VARPTR(ND$))'IOT_NODE device/i2c_i/68
851 A=USR(TR+2)'2 = PRESUDO BURST READ MODE
860 D$=CHR$(R+0):A=USR3(VARPTR(D$))'IOT_PUT_S SET REGISTER ADDRESS
861 D$=SPACE$(6):A=USR5(VARPTR(D$))'IOT_GET_S PRESUDO BURST READ * 6
862 D=VARPTR(D$)+1
870 A=VARPTR(X):POKE A+0,PEEK(D+1):POKE A+1,PEEK(D+0)
871 A=VARPTR(Y):POKE A+0,PEEK(D+3):POKE A+1,PEEK(D+2)
872 A=VARPTR(Z):POKE A+0,PEEK(D+5):POKE A+1,PEEK(D+4)
880 LOCATE CX+12,CY+2:PRINT LEFT$(STR$(X)+"    ",6);
881 LOCATE CX+20,CY+2:PRINT LEFT$(STR$(Y)+"    ",6);
882 LOCATE CX+28,CY+2:PRINT LEFT$(STR$(Z)+"    ",6);
999 '
1000 'T=1-T:PRINT MID$("*-",T+1,1)
1010 IF INKEY$="" THEN 710
