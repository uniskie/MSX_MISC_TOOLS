;----------------------------------
; GRAPH SAURUS ±¯¼­¸ À²µ³ Û°ÀÞ°
;----------------------------------
; 256 byte * n line ÃÞ¼®Ø»ÚÙ
; SCREEN5 Ê line½³ ÊÝÌÞÝ‚Å¼®Ø
;----------------------------------
 NAME LOADSRD ;*BINHEAD*
;--> BIN FILE HEADER -->
; DB 0FEH ;*BINHEAD*
; DW ORGADR ;*BINHEAD*
; DW ENDFL-1 ;*BINHEAD*
; DW ORGADR ;*BINHEAD*
;<-- BIN FILE HEADER <--
;
;
ORGADR: EQU 0D000H
 ORG ORGADR
;
;--- jump table
 JP LOAD_SR7
 JP SET_PLT
 JP SPR_TIME
 JP COPY_HI
;
;--- symbol
SYSCALL: EQU 0F37DH ;¼½ÃÑº°Ù
ACPAGE: EQU 0FAF6H ;±¸Ã¨ÌÞÍß°¼Þ
SCRMOD: EQU 0FCAFH ;½¸Ø°Ý Ó°ÄÞ
DMA: EQU 0B000H ;B000H-CFFFH
BUF: EQU 0F55EH ;temp. buffer
VDPIOR: EQU 0006H ;VDP I/O port m (READ)
VDPIOW: EQU 0007H ;VDP I/O port n (WRITE)
;
;
;--- work area
W_TYPE: DB 0 ;0:binary/ff:packed
W_FSIZE: ;
 DW 0 ;FILE SIZE
W_VRAM: DW 0000H
W_LOOP: DW 0
W_MODE: DB 0
;
W_YMAX: DB 255 ; y max (size-1)
W_YSIZE: ;
 DW 100H ; y size
;
FCB: ;
 DB 0
 DM 'FILENAMEEXT'
 DS 37-12
;
;---- sub routines ----
;
;
;---- file access ----
;
;--- set fcb's filename by filemane string
SETNAME: ;use: all
; in hl:adr. / a:length
; '.'Áª¯¸
 LD C,A
 LD B,8
 LD DE,FCB+1
STNAM_0: ;
 LD A,(HL)
 INC HL
 CP '.'
 JR Z,STNAM_1 ;8Ó¼ÞÏÃÞ' 'ÃÞ³ÒÙ
 LD (DE),A
 INC DE
 DEC B
 JR Z,STNAM_2
 DEC C
 JP NZ,STNAM_0
 JR STNAM_F1 ;µÜØÏÃÞ' 'ÃÞ³ÒÙ(1)
STNAM_1: ;
;filename(8Ó¼ÞÏÃÞ)¦ ' 'ÃÞ ³ÒÙ
 LD A,' '
 LD (DE),A
 INC DE
 DJNZ STNAM_1
STNAM_2: ;
; filename=OK -> ¶¸Á®³¼
 LD B,3 ; ¶¸Á®³¼ = 3Ó¼Þ
 LD A,(HL)
 CP '.' ; 9 Ó¼ÞÒ = '.' Å× ½·¯Ìß
 JR NZ,STNAM_3
 INC HL
 DEC C
 JR Z,STNAM_F2 ;µÜØÏÃÞ³ÒÙ(2)
STNAM_3: ;
;¶¸Á®³¼ ÃÝ¿³
 LD A,(HL)
 INC HL
 LD (DE),A
 INC DE
 DEC B
 RET Z ; complete
 DEC C
 JP NZ,STNAM_3
 JR STNAM_F2
; µÜØÏÃÞ' 'ÃÞ ³ÒÙ
STNAM_F1: ;
 INC B
 INC B
 INC B
STNAM_F2: ;
 LD A,' '
 LD (DE),A
 INC DE
 DJNZ STNAM_F2
 RET
;
;--- open file
FILEOPEN: ;
 LD DE,FCB
 LD C,0FH
 CALL SYSCALL
 LD IX,FCB
 LD (IX+14),1
 LD (IX+15),0 ;rec.size(1)
 LD (IX+33),0
 LD (IX+34),0
 LD (IX+35),0
 LD (IX+36),0 ;rec.
 OR A
 LD HL,_M_OPEN
 JP NZ,ERROR
;
; (set dma)
 LD DE,DMA
 LD C,1AH
 CALL SYSCALL
 RET
;
;--- set file information from file header
GET_HEAD: ;
; (read header)
 LD HL,7
 LD DE,FCB
 LD C,27H
 CALL SYSCALL
 OR A
 LD HL,_M_TYPE
 JP NZ,ERROR
;
; check head
 LD A,(DMA) ;bin:FEH / pack:FDH
 ADD A,3
 LD (W_TYPE),A
 CP 2
 LD HL,_M_TYPE
 JP NC,ERROR ; A>=2
;
; calc file size
 LD HL,(DMA+3)
 LD DE,(DMA+1)
 LD (W_VRAM),DE
 XOR A
 SBC HL,DE
 INC HL
 LD (W_FSIZE),HL
 RET
;
;--- calc. record numbers
CALREC: ; RET HL:SIZE
 LD HL,(W_FSIZE)
 LD A,H
 OR L
 JR Z,CALREC_
 LD DE,2001H
 SBC HL,DE
 EX AF,AF'
 ADD HL,DE
 EX AF,AF'
 JR NC,CALREC_
 LD DE,0
 LD (W_FSIZE),DE
 RET
CALREC_: ;
 LD DE,2000H
 SBC HL,DE
 LD (W_FSIZE),HL
 LD HL,2000H
 RET
;
;--- read file
FILEREAD: ; IN H:SIZE
 LD DE,FCB
 LD C,27H
 CALL SYSCALL
 OR A
 RET
;
;
;---- graphics ----
;
;--- check screen mode
CHKSCMD: ;
 LD A,(SCRMOD) ;screen mode
 CP 7
 LD A,255 ;max y = 255
 JR NC,CHKSCMD_
 LD A,127 ;max y = 127
CHKSCMD_: ;
 LD (W_YMAX),A
 LD L,A
 LD H,0
 INC HL
 LD (W_YSIZE),HL
 RET
;
;--- set vram address to write
; use:A,C,DE
;
VSETWR: ;
 LD DE,(W_VRAM)
; de = vram address
VSETWR2: ;
 LD A,(VDPIOW)
 INC A
 LD C,A
 LD A,(SCRMOD) ;screen mode
 CP 7
 JR NC,VSETWR3 ; page / 1
; SCREEN 5,6 = page : A16,15
 LD A,D
 RRA ; c=d7
 RRA ; c=d6
 LD A,(ACPAGE) ; ActivePage
 RLA ;00000pp6
 AND 7 ; xxxxxpp6 ÈÝÉÀÒ
 JR VSETWR4
VSETWR3: ;
; SCREEN 7,8 = page : A16
 LD A,(ACPAGE) ; ActivePage
 RRA ;c=page(p)
 LD A,D
 RLA ;6543210p/c=7
 RLA ;543210p7/c=6
 RLA ;43210p76/c=5
 AND 7 ; xxxxxp76
VSETWR4: ;
 DI
 OUT (C),A ;bit2-0:A16-14 / bit7-3:00000
 LD A,8EH
 OUT (C),A
;
 OUT (C),E ;A7-0
 RES 7,D ;bit7:0
 SET 6,D ;bit6:WRITE=1
 OUT (C),D ;bit5-0:A13-8
 RET
;
;--- wait until vdp-command terminated
WAITVDP: ;
 LD A,(VDPIOW)
 LD C,A
 INC C
 DI
WAITVDP2: ;
 LD A,2
 OUT (C),A
 LD A,15+80H
 OUT (C),A
WAITVDP_: ;
 IN A,(C)
 RRCA
 JP C,WAITVDP_
 XOR A
 OUT (C),A
 LD A,15+80H
 OUT (C),A
 RET
;
;--- wait until v-sync cycle
WAIT_VR: ;
 LD A,(VDPIOW)
 LD C,A
 INC C
 DI
WAIT_VR2: ;
 LD A,2
 OUT (C),A
 LD A,15+80H
 OUT (C),A
WAITVR_: ;
 IN A,(C)
 AND 40H
 JP Z,WAITVR_
 XOR A
 OUT (C),A
 LD A,15+80H
 OUT (C),A
 RET
;
;--- ERROR routine ---
;
ERROR: ; ´×°¼®Ø
 LD SP,(ERROR_SP)
 EI
;
 XOR A
 LD DE,_M_OK
 SBC HL,DE
 RET Z ; SUCCESS
;
; -- ´×° ¦ µº½
; CALL CRUNCH ; Á­³¶ÝÄÞ°ÄÞ Í ÍÝ¶Ý
; LD HL,KBUF
 CALL NEWSTT ; Á­³¶Ýº°ÄÞ ¼Þ¯º³
 RET
;
ERROR_SP: ;
 DW 0
;
;CRUNCH: EQU 42B2H ; TEXT TO INTERMEDIATE CODE
NEWSTT EQU 4601H ; EXEC BASIC INTERMEDIATE CODE
;KBUF EQU 0F41FH ; INTERMEDIATE CODE BUFFER
_M_OK: EQU 0
_M_OPEN: ;':ERROR53',0 ; File not found
 DB ':'
 DB 0A6H
 DB 0FH
 DB 53
 DB 0
_M_TYPE: ;':ERROR254',0 ; Unprintable error 244
 DB ':'
 DB 0A6H
 DB 0FH
 DB 254
 DB 0
_M_UERR: ;':ERROR255',0 ; Unprintable error 244
 DB ':'
 DB 0A6H
 DB 0FH
 DB 255
 DB 0
;
;
;
;--- LOAD CG DATA ----
;
LOAD_SR7: ;
; (SETUP ERROR TRAP)
 LD (ERROR_SP),SP
 LD HL,_M_UERR
;
; check variable type
 CP 3
 JP NZ,ERROR
;
; (a=STRING LENGTH)
 LD A,(DE)
; OR A
; JP Z,ERROR
 CP 11 ;11Ó¼Þ²¶ Ê ´×°
 JP C,ERROR
;
; (hl=STRING ADDRESS)
 INC DE
 EX DE,HL
 LD E,(HL)
 INC HL
 LD D,(HL)
 EX DE,HL
;
; (SET FILENAME)
 CALL SETNAME
;
 CALL CHKSCMD ;Áª¯¸ ½¸Ø°Ý Ó°ÄÞ
;
; (LOAD & DRAW)
 CALL FILEOPEN
 CALL GET_HEAD
 CALL CALREC
 PUSH HL
 CALL FILEREAD
 POP DE
 CALL WRTCG_F
 LD HL,(W_FSIZE)
 LD A,H
 OR L
 JP Z,END_OK
L_MAIN: ;
 CALL CALREC
 PUSH HL
 CALL FILEREAD
 POP DE
 CALL WRTCG_N
 LD HL,(W_FSIZE)
 LD A,H
 OR L
 JP NZ,L_MAIN
END_OK: ;
 LD HL,_M_OK
 JP ERROR
;
; --WRITE CG DATA to VRAM --
; in:  de = size+1
;
WRTCG_F: ;
 EXX
 CALL VSETWR
 DEC C
 LD DE,(W_VRAM)
 EXX
 LD HL,DMA
;
 LD A,(W_TYPE)
 CP 1
 JP C,EXTSR7_F
 JP Z,NORSR7_F
 RET
;
WRTCG_N: ;
 EXX
 LD A,(VDPIOW)
 LD C,A
 LD DE,(W_VRAM)
 EXX
 LD HL,DMA
;
 LD A,(W_TYPE)
 CP 1
 JP C,EXTSR7_N
 JP Z,NORSR7_F
 RET
;
;
; -- SR7 DECODE --
REQ_ESR7: ;
 LD (W_MODE),A
 LD (W_LOOP),BC
 EXX
 LD (W_VRAM),DE
 RET
EXTSR7_N: ;
 LD BC,(W_LOOP)
 LD A,(W_MODE)
 CP 1
 JP C,EXTSR7_F
 JP Z,EXSR7_1
 JP EXSR7_2
;
; START CHECK DATA
EXTSR7_F: ;
; CHECK BUFFER 0
 LD A,D
 OR E
 LD A,0
 JR Z,REQ_ESR7
;
; A=0 Å× Ù°Ìß¶·ºÐ Í ¼Þ¬ÝÌß
 LD A,(HL)
 INC HL ;adr.+
 DEC DE ;size-
 AND A
 JR Z,EXSR7_1
;
; A<=15 Å× B=A ÃÞ Ù°Ìß¶·ºÐ
 CP 10H
 LD B,A
 JR C,EXSR7_2
;
; Á®¸¾Â ¼Ã² ¶·ºÐ
 EXX
 OUT (C),A
 INC DE ;vram+
 LD A,D
 OR E
 JR Z,EXSR7_E
 LD A,(W_YMAX)
 CP D
 EXX
 JR NC,EXTSR7_F
 JP END_OK
;
; Ù°Ìß ¶·ºÐ É Ê¼ÞÒ
EXSR7_1: ;
; ÊÞ¯Ì§Áª¯¸ 1
 LD A,D
 OR E
 LD A,1
 JR Z,REQ_ESR7
;
; Ù°Ìß¶²½³ ¦ Æ­³Ø®¸
 LD B,(HL)
 INC HL ;adr.+
 DEC DE ;size-
;
; Ù°Ìß¶·ºÐ ¼Þ¯º³
EXSR7_2: ;
; ÊÞ¯Ì§Áª¯¸ 2
 LD A,D
 OR E
 LD A,2
 JR Z,REQ_ESR7
;
; ¶×°º°ÄÞ ¦ Æ­³Û¸
 LD A,(HL)
 INC HL ;adr.+
 DEC DE ;size-
;
; Ù°Ìß
EXSR7_3: ;
 LD C,A
 EXX
 OUT (C),A
 INC DE ;vram+
 LD A,D
 OR E
 JR Z,EXSR7_E
 LD A,(W_YMAX)
 CP D
 EXX
 JR C,EXSR7_E
 LD A,C
 DJNZ EXSR7_3
 JP EXTSR7_F
;
EXSR7_E: ;
 JP END_OK
;
;
;-- NORMAL BINARY --
REQ_NSR7: ;
 EXX
 LD (W_VRAM),DE
 RET
;
NORSR7_F: ;
;(ÊÞ¯Ì§Áª¯¸)
 LD A,D
 OR E
 JR Z,REQ_NSR7
;
 LD A,(HL)
 INC HL
 DEC DE
;
 EXX
 OUT (C),A
 INC DE ;vram+
 LD A,D
 OR E
 JP Z,END_OK
 LD A,(W_YMAX)
 CP D
 EXX
 JP NC,NORSR7_F
 JP END_OK
;
;
;---- SET PALETTE ----
; a=usr(address)
; address:palette*16
; parette:2byte:rb,0g
SET_PLT: ;
 CP 2
 RET NZ
;
 LD A,(VDPIOW)
 LD C,A
 INC C
;
 DI
 XOR A
 OUT (C),A
 LD A,16+80H
 OUT (C),A
;
 CALL WAIT_VR2
 INC C
;
; --> ÃÇ· ÃÞ Á®¸¾Â Ó¼ÞÚÂ ±ÄÞÚ½ ¼­Ä¸
; LD HL,(0F7F8H)
; <--
; --> Ã¸ÊÝ É ÔØ¶À : hl=(hl+2)
 PUSH HL
 POP IX ;IX := string descriptor
 LD L,(IX+2) ;get value(low)
 LD H,(IX+3) ;get value(high)
; <--
 LD B,32
 OTIR
 EI
 RET
;
;
;---- WRITE TIME to SPRITE ----
;     for CLOCK.BAS
EXTROM: EQU 015FH
REDCLK: EQU 01F5H
WRTCLK: EQU 01F9H
ATRBAS: EQU 0F928H
TIMEBUF: ;
 DS 8
TIMECNT: ;
 DB 11
;
REDCRAM: ;
 PUSH BC
 PUSH HL
 LD IX,REDCLK
 CALL EXTROM
 POP HL
 POP BC
 RET
;
WRTCRAM: ;
 PUSH BC
 PUSH HL
 LD IX,WRTCLK
 CALL EXTROM
 POP HL
 POP BC
 RET
;
;--- MAIN ---
;
SPR_TIME: ;
; (24¼Þ¶ÝË®³¼Þ)
 LD A,1
 LD C,1AH
 CALL WRTCRAM
;
 LD C,5
 LD B,6
 LD HL,TIMEBUF
TIMSPR_0: ;
 CALL REDCRAM
 DEC C
 INC A
 RLCA
 RLCA
 LD (HL),A
 INC HL
 DJNZ TIMSPR_0
; (ÃÞ°ÀÉ ¾²ÚÂ)
 LD HL,(TIMEBUF+4)
 LD (TIMEBUF+6),HL
 LD HL,(TIMEBUF+2)
 LD (TIMEBUF+3),HL
 LD A,(TIMECNT)
 RLCA
 RLCA
 LD (TIMEBUF+2),A
 LD (TIMEBUF+5),A
; (ÃÝÒÂ)
 LD A,(TIMECNT)
 XOR 4
 LD (TIMECNT),A
; (VDPºÏÝÄÞ ¼­³Ø®³ÏÁ)
 CALL WAITVDP
;
 LD DE,(ATRBAS) ;sprite atr.
 CALL VSETWR2
 DEC C
 LD B,8+8
 LD HL,TIMEBUF
TIMSPR_2: ;
 IN A,(C)
 IN A,(C)
 OUTI
 IN A,(C)
 DJNZ TIMSPR_2
 EI
 RET
;
;
;---- vdp command routine ----
;
; (VDP Command Operation Code)
CMR_HMMC: EQU 0F0H ;High  CPU->VRAM
CMR_YMMM: EQU 0E0H ;YÎ³º³ VRAM->VRAM
CMR_HMMM: EQU 0D0H ;High  VRAM->VRAM
CMR_HMMV: EQU 0C0H ;High  fill VRAM
CMR_LMMC: EQU 0B0H ;Logic CPU->VRAM
CMR_LMCM: EQU 0A0H ;Logic VRAM->CPU
CMR_LMMM: EQU 090H ;Logic VRAM->VRAM
CMR_LMMV: EQU 080H ;Logic fill VRAM
CMR_LINE: EQU 070H ;Draw Line
;CMR_SRCH EQU 060H ;Search Color
;CMR_PSET EQU 050H ;Write Pixel
;CMRPOINT EQU 040H ;Read Pixel
CMR_STOP: EQU 000H ;Stop Command
;
; (Logical Operation Code)
LOG_PSET: EQU 0
LOG_AND: EQU 1
LOG_OR: EQU 2
LOG_XOR: EQU 3
LOG_NOT: EQU 4
LOG_TPSET: EQU 8
;LOG_TAND EQU 9
;LOG_TOR EQU 10
;LOG_TXOR EQU 11
;LOG_TNOT EQU 12
;
; (ARGUMENT BITS)
;ARG : bit|__7|__6|__5|__4|__3|__2|__1|__0|
;         | 0 | - |MXD|MXS|DIY|DIX| EQ|MAJ|
; MXD : DESTINATION ¶Þ ¶¸Á®³VRAM
; MXS : SORCE ¶Þ ¶¸Á®³VRAM
; DIY : 0:¼À   (Y) + NY
;       1:³´   (Y) - NY
; DIX : 0:Ð·Þ  (X) + NX
;       1:ËÀÞØ (X) - NX
; EQ  : (SEARCH) 1:·®³¶²¼®¸ ²¶Þ² ÃÞÓ ¼­³Ø®³
; MAJ : (LINE) 0:(NX > NY) ÖºÅ¶Þ
;              1:(NX < NY) ÀÃÅ¶Þ
ARG_DIY: EQU 08H
ARG_DIX: EQU 04H
;ARG_EQ EQU 02H
ARG_MAJ: EQU 01H
;
;--- work area ---
;
CMD_SRC: ;
 DW 0,0 ;SX,SY (R#32)
CMD_DST: ;
 DW 0,0 ;DX,DY (R#36)
CMD_SIZ: ;
 DW 0,0 ;NX,NY (R#40)
CMD_CLR: ;
 DB 0 ;COLOR (R#44)
CMD_ARG: ;
 DB 0 ;ARGUMENT (R#45)
CMD_CMR: ;
 DB 0 ;OPERATION (R#46)
CMD_DAT: EQU CMD_SRC
;
;--- do vdp command
VDPCOMAND: ;
 LD A,(VDPIOW)
 LD C,A
 INC C
 LD A,32
 DI
 OUT (C),A
 LD A,17+80H
 OUT (C),A
 CALL WAITVDP2
 INC C
 INC C
 LD B,15
 LD HL,CMD_DAT
 OTIR
 EI
 RET
;
;--- add page size to y
ADD_PAGE: ;
; in: a = page no.
;     hl = y
 OR A
 RET Z
 LD DE,(W_YSIZE)
ADDPAGE_: ;
 ADD HL,DE
 DEC A
 JP NZ,ADDPAGE_
 SBC HL,DE
 RET
;
;--- set copy parameter
; hl = data's address
;  (SX,SY)-S$(NX,NY),P_S TO (DX,DY),P_D
;   X,Y:2byte / S$=00H or 0DCH(STEP) / P:1byte
;
SET_COPYP: ;
 LD DE,CMD_SRC
 LDI
 LDI
 LDI
 LDI
 LD A,(HL)
 LDI
 LDI
 LDI
 LDI
 PUSH HL
 CP 0DCH
 JR Z,SET_DIXY
;
; calc. NX (signed)
;
 OR A
 LD DE,(CMD_SRC)
 LD HL,(CMD_SIZ)
 SBC HL,DE
 LD (CMD_SIZ),HL
; calc. NY (signed)
 OR A
 LD DE,(CMD_SRC+2)
 LD HL,(CMD_SIZ+2)
 SBC HL,DE
 LD (CMD_SIZ+2),HL
;
; set DIY,DIX and inc NX,NY
;
SET_DIXY: ;
 LD C,0 ;ARG
; check NX,DIX
 LD DE,(CMD_SIZ)
 LD A,D
 RLCA ;sign check
 JR NC,NXEQPLUS
 LD A,ARG_DIX ; (NX=minus)
 OR C
 LD C,A
 LD HL,0
 SBC HL,DE
 EX DE,HL
NXEQPLUS: ;
 INC DE
 LD (CMD_SIZ),DE
; check NY,DIY
 LD DE,(CMD_SIZ+1)
 LD A,D
 RLCA ;sign check
 JR NC,NYEQPLUS
 LD A,ARG_DIY ; (NY=minus)
 OR C
 LD C,A
 LD HL,0
 SBC HL,DE
 EX DE,HL
NYEQPLUS: ;
 INC DE
 LD (CMD_SIZ+2),DE
; write ARG
 LD A,C
 LD (CMD_ARG),A
;
; add Page to SY
;
 POP HL
 LD A,(HL)
 INC HL
 PUSH HL
 LD HL,(CMD_SRC+2)
 CALL ADD_PAGE
 LD (CMD_SRC+2),HL
 POP HL
;
; set DX,DY
;
 LD DE,CMD_DST
 LDI
 LDI
 LDI
 LDI
;
; add Page to DY
;
 LD A,(HL)
 LD HL,(CMD_DST+2)
 CALL ADD_PAGE
 LD (CMD_DST+2),HL
;
 RET
;
;--- DO HMMV
; a=usr(address)
; DW 0,0 ;SX,SY (R#32)
; DW 0,0 ;DX,DY (R#36)
; DW 0,0 ;NX,NY (R#40)
; DB 0 ;COLOR (R#44)
; DB 0 ;ARGUMENT (R#45)
COPY_HI: ;
 SUB 2
 RET NZ
;
; --> ÃÇ· ÃÞ Á®¸¾Â Ó¼ÞÚÂ ±ÄÞÚ½ ¼­Ä¸
; LD HL,(0F7F8H)
; <--
; --> Ã¸ÊÝ É ÔØ¶À : hl=(hl+2)
 PUSH HL
 POP IX ;IX := string descriptor
 LD L,(IX+2) ;get value(low)
 LD H,(IX+3) ;get value(high)
; <--
 LD DE,BUF
 LDI ;SX
 LDI
 LDI ;SY
 LDI
 LDI ;S$
 INC HL
 LDI ;NX
 LDI
 LDI ;NY
 LDI
 LDI ;PAGE S
 INC HL
 LDI ;DX
 LDI
 LDI ;DY
 LDI
 LDI ;PAGE D
;
DO_HMMV: ;
 LD HL,BUF
 CALL SET_COPYP
 LD A,CMR_HMMV
 LD (CMD_CMR),A
 JP VDPCOMAND
;
ENDFL: ;
